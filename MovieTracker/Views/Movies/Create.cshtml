@model MovieTracker.Models.Movie

@{
    ViewBag.Title = "Create";
}

<h2>Add a new movie</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    
                </div>
                <div class="col-md-6 col-md-offset-4">
                    <input type="submit" name="autopopulate" value="Get details" class="btn btn-xs" title="Gets movie details from the Open Movie Database. Make sure your title is spelt correctly."/>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MovieYear, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MovieYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MovieYear, "", new { @class = "text-danger" })
                </div>
            </div>
            

            <div class="form-group">
                @Html.LabelFor(model => model.MovieType, htmlAttributes: new { @class = "control-label col-md-2", @title = "DVD, Online file, etc?"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MovieType, new { htmlAttributes = new { @class = "form-control", @title = "DVD, Online file, etc?" } } )
                    @Html.ValidationMessageFor(model => model.MovieType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2", @title = "Location where your movie is stored." })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @title = "Location where your movie is stored." } })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Director, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Director, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Director, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Plot, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Plot, new { @class = "form-control", @rows = "5"})
                    @Html.ValidationMessageFor(model => model.Plot, "", new { @class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label col-md-2", @title = "Insert the link location to an online image you want as the poster to your movie, alternatively use the Get Movies button to get one." } )
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Poster, new { @class = "form-control", @rows = "3", @title = "Insert the link location to an online image you want as the poster to your movie, alternatively use the Get Movies button to get one." })
                    @Html.ValidationMessageFor(model => model.Poster, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <img src="@Html.DisplayFor(model =>model.Poster)"  />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ActorString, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.ActorString, new { @class = "form-control", @rows = "3"})
                    @Html.ValidationMessageFor(model => model.ActorString, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GenreString, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GenreString, new { htmlAttributes = new { @class = "form-control"} })
                    @Html.ValidationMessageFor(model => model.GenreString, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" name="create" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
